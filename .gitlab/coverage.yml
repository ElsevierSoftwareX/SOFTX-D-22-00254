## ---------------------------------------------------------------------
## Copyright (C) 2019 - 2022 by the lifex authors.
##
## This file is part of lifex.
##
## lifex is free software; you can redistribute it and/or modify
## it under the terms of the GNU Lesser General Public License as published by
## the Free Software Foundation, either version 3 of the License, or
## (at your option) any later version.
##
## lifex is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
## Lesser General Public License for more details.
##
## You should have received a copy of the GNU Lesser General Public License
## along with lifex.  If not, see <http://www.gnu.org/licenses/>.
## ---------------------------------------------------------------------

# Author: Pasquale Claudio Africa <pasqualeclaudio.africa@polimi.it>.

# Compute coverage.
coverage:
  stage: coverage
  tags:
    - build_and_test
  dependencies:
    - configure
    - test
  script:
    - cd build

    - COVERAGE_TMP=coverage_tmp.info
    - COVERAGE=coverage.info

    - lcov --quiet --capture --directory . --output ${COVERAGE_TMP}
    - lcov --quiet --remove  ${COVERAGE_TMP} "*clipp.hpp" --output ${COVERAGE_TMP}
    - lcov --quiet --remove  ${COVERAGE_TMP} "*apps*" "*examples*" --output ${COVERAGE_TMP}
    - lcov --quiet --extract ${COVERAGE_TMP} "*lifex*" --output ${COVERAGE}

    - genhtml ${COVERAGE} --title "${CI_PROJECT_NAME}" --output-directory coverage
  coverage: '/\s+(?:lines).+: (\d+.\d+\%).*/'
  artifacts:
    paths:
      - build/coverage
    expire_in: 1 month
  only:
    refs:
      - branches
    variables:
      - $COVERAGE == "ON"

# Running tests is much slower with coverage flags enabled,
# so it is done only on scheduled pipelines. Otherwise, the
# last available coverage information is retrieved so that
# the coverage badge does not get an "unknown" status.
coverage retrieve:
  stage: coverage
  script:
    - .gitlab/coverage_retrieve.py
    - unzip artifacts.zip
  coverage: '/Last available coverage: (\d+.\d+\%).*/'
  artifacts:
    paths:
      - build/coverage
    expire_in: 1 day
  only:
    refs:
      - main
    variables:
      - $COVERAGE == "OFF"
